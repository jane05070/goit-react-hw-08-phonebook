{"version":3,"file":"static/js/589.1fff8d3b.chunk.js","mappings":"mTAEaA,EAAa,kBAAMC,EAAAA,GAAAA,MAAY,kCAAlB,EAEbC,EAAgB,kBAC3BD,EAAAA,GAAAA,MACE,mGAFyB,EAKhBE,EAAc,kBACzBF,EAAAA,GAAAA,MAAY,uDADa,EAGdG,EAAmB,kBAAMH,EAAAA,GAAAA,QAAc,iBAApB,EAEnBI,EAAsB,kBAAMJ,EAAAA,GAAAA,KAAW,mBAAjB,EAEtBK,EAAsB,kBACjCL,EAAAA,GAAAA,QAAc,6CADmB,C,4FCfnC,EAA0B,yBAA1B,EAAgE,4B,yFCAhE,EAAuB,0BAAvB,EAAyD,2BAAzD,EAA4F,2BAA5F,EAA6H,yBAA7H,EAA8J,2B,UCkG9J,EApFoB,WAClB,OACEM,EAAAA,EAAAA,MADF,eAAOC,EAAP,YAAqBC,EAArB,EAAqBA,UAAWC,EAAhC,EAAgCA,UAAWC,EAA3C,EAA2CA,QAE7BC,GAAaC,EAAAA,EAAAA,MAAnBC,MAERC,EAAAA,EAAAA,YAAU,WACJL,IACFN,EAAAA,EAAAA,KAEH,GAAE,CAACM,KAEJK,EAAAA,EAAAA,YAAU,WACJJ,IACFR,EAAAA,EAAAA,KAEH,GAAE,CAACQ,IAEJ,IAUMK,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,KAAMF,EAAAA,KACHG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,0BAEZC,MAAON,EAAAA,KACJO,UAAU,0CACVC,SAAS,2CACTC,QAAQ,gDACRJ,SAAS,gCAQd,OACE,iCACE,SAAC,KAAD,CAAgBK,UAAW,KAAMC,SAAS,eAC1C,SAAC,KAAD,CACEC,cATgB,CACpBV,KAAM,GACNI,MAAO,IAQHP,iBAAkBA,EAClBc,SAlCe,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACxBb,EAAOY,EAAOZ,KACdc,EAASF,EAAOR,MACtBX,EAASsB,MACP,SAAAC,GAAO,OAAIA,EAAQhB,KAAKiB,gBAAkBL,EAAOZ,KAAKiB,aAA/C,IAELC,MAAM,GAAD,OAAIN,EAAOZ,KAAX,6BACLX,EAAW,CAAEW,KAAAA,EAAMc,OAAAA,KAAaD,GACrC,EAuBG,UAKE,UAAC,KAAD,CAAMM,UAAWC,EAAjB,WACE,mBAAOD,UAAWC,EAAlB,UAA6B,QAE3B,SAAC,KAAD,CACED,UAAWC,EACXC,KAAK,OACLrB,KAAK,OACLsB,YAAY,UAEd,SAAC,KAAD,CAAcH,UAAWC,EAAWpB,KAAK,OAAOuB,UAAU,YAE5D,mBAAOJ,UAAWC,EAAlB,UAA6B,UAE3B,SAAC,KAAD,CACED,UAAWC,EACXC,KAAK,MACLrB,KAAK,QACLsB,YAAY,WAEd,SAAC,KAAD,CAAcH,UAAWC,EAAWpB,KAAK,QAAQuB,UAAU,YAE7D,oBAAQJ,UAAWC,EAASI,SAAUlC,EAAW+B,KAAK,SAAtD,UACG/B,IAAa,SAAC,KAAD,CAAemC,OAAO,KAAKC,MAAM,OAAQ,wBAOlE,EC/ED,EAXgB,WAEd,OADmBC,EAAAA,EAAAA,IAAYC,EAAAA,MAG3B,iBAAKT,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SAA+B,sBAC/B,SAAC,EAAD,MAIP,C","sources":["components/Utils/Notification.js","webpack://goit-react-hw-08-phonebook/./src/pages/Add/AddPage.module.css?399a","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","pages/Add/AddPage.jsx"],"sourcesContent":["import { toast } from 'react-toastify';\n\nexport const loginError = () => toast.error('Sorry, wrong email or password!');\n\nexport const registerError = () =>\n  toast.error(\n    'Sorry, incorrect data entered! check the password and email, it must be longer than 7 characters'\n  );\n\nexport const serverError = () =>\n  toast.error('Sorry, something went wrong, please try again later!');\n\nexport const notifyAddContact = () => toast.success('Contact added!');\n\nexport const notifyDeliteContact = () => toast.info('Contact deleted!');\n\nexport const notifyUpdateContact = () =>\n  toast.success('The contact has been successfully updated!');","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"AddPage_wrapper__F+dmU\",\"titlePhone\":\"AddPage_titlePhone__DFkG7\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\",\"error\":\"ContactForm_error__C1smZ\"};","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { RotatingLines } from 'react-loader-spinner';\nimport {\n  useAddContactMutation,\n  useFetchContactsQuery,\n} from 'redux/contactsSlice';\nimport { useEffect } from 'react';\n\nimport { notifyAddContact, serverError } from '../Utils/Notification';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const [addContact, { isLoading, isSuccess, isError }] =\n    useAddContactMutation();\n  const { data: contacts } = useFetchContactsQuery();\n\n  useEffect(() => {\n    if (isSuccess) {\n      notifyAddContact();\n    }\n  }, [isSuccess]);\n\n  useEffect(() => {\n    if (isError) {\n      serverError();\n    }\n  }, [isError]);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const name = values.name;\n    const number = values.phone;\n    contacts.find(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    )\n      ? alert(`${values.name} is already in contacts!`)\n      : addContact({ name, number }) && resetForm();\n  };\n\n  const validationSchema = Yup.object().shape({\n    name: Yup.string()\n      .min(2, 'Too Short!')\n      .max(20, 'Too Long!')\n      .required('Name is required field'),\n\n    phone: Yup.number()\n      .typeError('That does not look like a phone number')\n      .positive(\"A phone number can't start with a minus\")\n      .integer(\"A phone number can't include a decimal point\")\n      .required('A phone number is required'),\n  });\n\n  const initialValues = {\n    name: '',\n    phone: '',\n  };\n\n  return (\n    <>\n      <ToastContainer autoClose={1500} position=\"top-right\" />\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={handleSubmit}\n      >\n        <Form className={css.form}>\n          <label className={css.label}>\n            Name\n            <Field\n              className={css.input}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name\"\n            />\n            <ErrorMessage className={css.error} name=\"name\" component=\"div\" />\n          </label>\n          <label className={css.label}>\n            Number\n            <Field\n              className={css.input}\n              type=\"tel\"\n              name=\"phone\"\n              placeholder=\"phone\"\n            />\n            <ErrorMessage className={css.error} name=\"phone\" component=\"div\" />\n          </label>\n          <button className={css.btn} disabled={isLoading} type=\"submit\">\n            {isLoading && <RotatingLines height=\"20\" width=\"20\" />}\n            Add contact\n          </button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nexport default ContactForm;","import { useSelector } from 'react-redux';\n\nimport { getIsLoggedIn } from 'redux/selectors';\n\nimport css from './AddPage.module.css';\nimport ContactForm from 'components/ContactForm/ContactForm';\n\nconst AddPage = () => {\n  const isLoggedIn = useSelector(getIsLoggedIn);\n  return (\n    isLoggedIn && (\n      <div className={css.wrapper}>\n        <h1 className={css.titlePhone}>Add your contact</h1>\n        <ContactForm />\n      </div>\n    )\n  );\n};\nexport default AddPage;"],"names":["loginError","toast","registerError","serverError","notifyAddContact","notifyDeliteContact","notifyUpdateContact","useAddContactMutation","addContact","isLoading","isSuccess","isError","contacts","useFetchContactsQuery","data","useEffect","validationSchema","Yup","shape","name","min","max","required","phone","typeError","positive","integer","autoClose","position","initialValues","onSubmit","values","resetForm","number","find","contact","toLowerCase","alert","className","css","type","placeholder","component","disabled","height","width","useSelector","getIsLoggedIn"],"sourceRoot":""}